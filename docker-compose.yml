services:  


  kafka:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      CLUSTER_ID: 'EmptNWtoR4GGWx-BH6nGLQ'
    networks:
      - debezium-network

  connect:
    container_name: connect
    image: quay.io/debezium/connect:3.2.1.Final
    depends_on:
      - kafka
    ports:
     - 8083:8083
    environment:
      GROUP_ID: 1
      BOOTSTRAP_SERVERS: "kafka:9092"
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      REST_HOST_NAME: 0.0.0.0
      CONNECT_REST_PORT: 8083
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx1g"
    networks:
      - debezium-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-cluster-ui
    ports:
      - "9000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - debezium-network

  debezium-ui:
    container_name: debezium-ui
    image: quay.io/debezium/debezium-ui:2.1.2.Final
    environment:
      KAFKA_CONNECT_URIS: http://connect:8083
    links:
     - connect
    ports:
      - "8080:8080"
    networks:
      - debezium-network

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sales
    ports:
      - "5432:5432"
    networks:
      - debezium-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command: ["postgres", "-c", "wal_level=logical", "-c", "max_replication_slots=10","-c", "max_wal_senders=10"]

  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: nanda
      MYSQL_DATABASE: warehouse
      MYSQL_USER: nanda
      MYSQL_PASSWORD: nanda
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - debezium-network

networks:
  debezium-network:
    driver: bridge
volumes:
  postgres-data:
  mariadb-data:

